{
	// Default root class name used if @CLASS_NAME key is not defined is in
	// [sublime-settings]/conversion_settings/default_root_model_class
	//"@CLASS_NAME"      : "RootModelFromJSON",

	// Default root class name used if @BASE_CLASS_NAME key is not defined is in
	// [sublime-settings]/conversion_settings/default_root_class
	//"@BASE_CLASS_NAME" : "DataModel",
	"boolean_value"     : false,
	"integer_value"     : 666,
	"float_value"      	: 33.4,
	"stringValue"      	: "test",
	"dateValue"        	: "2012-04-23T18:25:43.511Z",
	// key with null value is converted to nullable property
	"null_value"        : null,
	// models for items of empty array will not be generated
	"list"       		: [],
	"base_json_object" 		: {
		"@CLASS_NAME" : "DataModel",
		"caption" : "GenerateCode",
		"rating" : 1,
		"value" : 12
	},
	"json_object" 		: {
		"@CLASS_NAME" : "ExtendedDataModel",
		"@BASE_CLASS_NAME" : "DataModel",
		"caption" : "GenerateCode",
		"rating" : 1,
		"value" : "text"
	},
	"other_object" : {
		"@CLASS_NAME" : "ExtendedDataModel2",
		"@BASE_CLASS_NAME" : "ExtendedDataModel",
		"price" : 20.0
	},
	// empty keys are ignored
	"" : {},
	// for an array with objects will be created one model with set of properties
	// from all objects in the array
	"children":
	[
		{
			// if @CLASS_NAME is commented/undefined the plugin will search
			// CLASS_NAME in other elements of array and the first found name will be applied
			//"@CLASS_NAME" : "DataMode2",
			"@BASE_CLASS_NAME" : "ExtendedDataModel",
			//"caption" : "some caption value",
			"number" : 1
		},
		{
			"@CLASS_NAME" : "ExtendedDataModel2",
			// nodes of a list are parsed in order so following property will be ignored
			"@BASE_CLASS_NAME" : "DataModel2",
			// if property is equal null it will be considered as
			// nullable property of type 'id'
			"caption" : null,
			"number" : 1,
			"value" : null,
			"user_defaults" : {
				"some_property" : "some value"
			}
		},
		{
			// if nullable property (node above) has value in other node,
			// its type will be determined on the value,
			// order of values is not important
			"caption" : "some caption value",
			"number" : 1.4
		},
		{
			"image" : null
		}
	]
}